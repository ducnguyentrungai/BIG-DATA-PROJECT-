import pandas as pd
import os
def save_to_parquet(data: pd.DataFrame, path: str):
    """
    L∆∞u DataFrame d∆∞·ªõi d·∫°ng Parquet (engine: pyarrow), chu·∫©n h√≥a c·ªôt Date.

    Args:
        data (pd.DataFrame): D·ªØ li·ªáu c·∫ßn l∆∞u
        path (str): ƒê∆∞·ªùng d·∫´n file ƒë·∫ßu ra (.parquet)

    Returns:
        bool: True n·∫øu l∆∞u th√†nh c√¥ng, False n·∫øu c√≥ l·ªói
    """

    try:
        # 1. Ki·ªÉm tra d·ªØ li·ªáu r·ªóng
        if data is None or data.empty:
            print("‚ö†Ô∏è DataFrame r·ªóng. Kh√¥ng c√≥ g√¨ ƒë·ªÉ l∆∞u.")
            return False

        # 2. T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
        os.makedirs(os.path.dirname(path), exist_ok=True)

        # 3. Chu·∫©n h√≥a c·ªôt 'Date' n·∫øu t·ªìn t·∫°i
        if 'Date' in data.columns:
            data['Date'] = pd.to_datetime(data['Date'], errors='coerce').astype('datetime64[ms]')
            if data['Date'].isna().any():
                print("‚ö†Ô∏è M·ªôt s·ªë d√≤ng c√≥ 'Date' kh√¥ng h·ª£p l·ªá s·∫Ω b·ªã ghi th√†nh null.")

        # 4. L∆∞u file parquet
        data.to_parquet(path, index=False, engine='pyarrow')
        print(f"‚úÖ Parquet saved: {path}")
        print(f"üî¢ S·ªë d√≤ng: {len(data)} | C·ªôt: {list(data.columns)}")
        return True

    except Exception as e:
        print(f"‚ùå L·ªói khi l∆∞u Parquet: {e}")
        return False
